##Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.
##------------------------------------------

"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""

class Solution:
    # @param {TreeNode} root the root of binary tree
    # @return {TreeNode} the new root
    sum_t = 0

    def convertBST(self, root):
        # Write your code here
        if root is None:
            return None
        self.convertBST(root.right)
        #the sum of greater number
        self.sum_t += root.val
        root.val = self.sum_t
        self.convertBST(root.left)
        return root
        
##---------------------------------------
##Total runtime 318ms
